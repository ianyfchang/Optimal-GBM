source("C:/Users/Monkey/Desktop/QPC/CIBERSORT_modified.R", encoding = 'UTF-8')
library(tibble)
library(tidyverse)
library(readxl)
library(xlsx)
df <- read.xlsx("C:/Users/Monkey/Desktop/QPC/Ref_compisition.xlsx")
df <- read.xlsx("C:/Users/Monkey/Desktop/QPC/Ref_compisition.xlsx", sheetName = "sheet1")
View(df)
#main function
QPCdecon <- function(decon, FAM, Sampling, num, norMeth){
ref_list <- list.files(path = paste0("C:/Users/Monkey/Desktop/QPC/Reference_db/"),pattern = paste0("Reference_GSE182109_11celltype_",FAM,"_",Sampling,"_n",num,"_",norMeth,collapse="|"),full.names = T,recursive = T)
lapply(gene_expression_matrix, function(filename){
datafile <- read_csv(filename) %>% as.data.frame() %>% column_to_rownames("gene_name")
datafile$...1 <- NULL
datafile$gene_name <- NULL
lapply(ref_list, function(ref_file){
ref_datafile <- read_csv(ref_file) %>% as.data.frame() %>% column_to_rownames("...1")
print(ref_file)
fam <- sapply(strsplit(ref_file, "_"), "[", 5)
sampling_chr <- sapply(strsplit(ref_file, "_"), "[", 6)
if (sampling_chr == "DatasetWhole") {
sampling <- paste0(sapply(strsplit(ref_file, "_"), "[", 6),"_",sapply(strsplit(ref_file, "_"), "[", 7))
num <- sapply(strsplit(ref_file [1], "_"), "[", 8)
num <- gsub("n","", num)
norMeth <- sapply(strsplit(sapply(strsplit(ref_file, "_"), "[", 9), "[.]"), "[", 1)
} else {
sampling <- sampling_chr
num <- sapply(strsplit(ref_file [1], "_"), "[", 7)
num <- gsub("n","", num)
norMeth <- sapply(strsplit(sapply(strsplit(ref_file, "_"), "[", 8), "[.]"), "[", 1)
}
if (decon == "Cibersort") {
dec_df <- CIBERSORT(mixture_file = datafile,
sig_matrix = ref_datafile,
perm = 100,
QN = FALSE,
absolute = FALSE,
abs_method = "sig.score")
dec_df_clr <- dec_df[1:10,]
df <- round(dec_df_clr * 100, digits = 2)
} else {
# EPIC_custom
dec_df <- deconvolute_epic_custom(gene_expression_matrix = datafile,
signature_matrix = ref_datafile,
signature_genes = row.names(ref_datafile))
dec_df <- as.data.frame(dec_df)
df <- round(dec_df * 100, digits = 2)
}
write.csv(df, paste0("C:/Users/Monkey/Desktop/QPC/DeconRes_ref_",fam,sampling,num,norMeth,"_",df_source,"_",decon,".csv"))
print(paste0("C:/Users/Monkey/Desktop/QPC/DeconRes_ref_",fam,sampling,num,norMeth,"_",df_source,"_",decon,".csv"))
gc()
})
})
}
gene_expression_matrix <- "C:/Users/Monkey/Desktop/QPC/Sample/TCGA_rawreadcounts_15.csv"
df_Source <- "your data source"
All_list <- df
row.names(All_list) <- All_list$Celltype
All_list$Celltype <- NULL
View(All_list)
length(nrow(All_list))
length(ncol(All_list))
nrow(All_list)
ncol(All_list)
All_list[[1]][[1]]
All_list[[1]][[2]]
All_list[[2]][[1]]
All_list[[3]][[1]]
All_list[[4]][[1]]
All_list[1][1]
All_list[1]
All_list[,1]
All_list[1,]
All_list[1][1]
All_list[1,1]
All_list[1,2]
for(k in 1:ncol(All_list)){
decon <- All_list[k,1]
FAM <- All_list[k,2]
Sampling <- All_list[k,3]
num <- All_list[k,4]
norMeth <- All_list[k,5]
print(decon, FAM, Sampling, num, norMeth)
res <- QPCdecon(decon, FAM, Sampling, num, norMeth)
}
for(k in 1:ncol(All_list)){
decon <- All_list[k,1]
FAM <- All_list[k,2]
Sampling <- All_list[k,3]
num <- All_list[k,4]
norMeth <- All_list[k,5]
cat(decon, FAM, Sampling, num, norMeth)
res <- QPCdecon(decon, FAM, Sampling, num, norMeth)
}
for(k in 1:ncol(All_list)){
decon <- All_list[k,1]
FAM <- All_list[k,2]
Sampling <- All_list[k,3]
num <- All_list[k,4]
norMeth <- All_list[k,5]
cat(decon, FAM, Sampling, num, norMeth)
print(FAM)
res <- QPCdecon(decon, FAM, Sampling, num, norMeth)
}
for(k in 1:ncol(All_list)){
decon <- All_list[k,1]
FAM <- All_list[k,2]
Sampling <- All_list[k,3]
num <- All_list[k,4]
norMeth <- All_list[k,5]
cat(decon, FAM, Sampling, num, norMeth)
res <- QPCdecon(decon, FAM, Sampling, num, norMeth)
}
print(paste0("A=",decon,"B=", FAM, Sampling, num, norMeth))
for(k in 1:ncol(All_list)){
decon <- All_list[k,1]
FAM <- All_list[k,2]
Sampling <- All_list[k,3]
num <- All_list[k,4]
norMeth <- All_list[k,5]
print(paste0("A=",decon,"B=", FAM, Sampling, num, norMeth))
res <- QPCdecon(decon, FAM, Sampling, num, norMeth)
}
for(k in 1:ncol(All_list)){
decon <- All_list[k,1]
FAM <- All_list[k,2]
Sampling <- All_list[k,3]
num <- All_list[k,4]
norMeth <- All_list[k,5]
print(paste0(decon, FAM, Sampling, num, norMeth))
res <- QPCdecon(decon, FAM, Sampling, num, norMeth)
}
for(k in 1:ncol(All_list)){
decon <- All_list[k,1]
FAM <- All_list[k,2]
Sampling <- All_list[k,3]
num <- All_list[k,4]
norMeth <- All_list[k,5]
print(paste(decon, FAM, Sampling, num, norMeth, sep = "_"))
res <- QPCdecon(decon, FAM, Sampling, num, norMeth)
}
